- crear db

	use ecommerce;
	
- crear colleciones

	db.createCollection('productos');
	db.createCollection('mensajes');

- agregar 10 documentos en la coleccion Productos

	db.productos.insertMany([
    {name: 'Coca-cola', price: 230, description: 'lata 354ml', img: 'https://http2.mlstatic.com/D_NQ_NP_877850-MLA49961094143_052022-O.webp', stock: 100, code: 'g-001'},
    {name: 'Sprite', price: 230, description: 'lata 354ml', img: 'https://http2.mlstatic.com/D_NQ_NP_754033-MLA51289582265_082022-O.webp', stock: 100, code: 'g-002'},
    {name: 'Fanta', price: 230, description: 'lata 354ml', img: 'https://http2.mlstatic.com/D_NQ_NP_847009-MLA52236052669_112022-O.webp', stock: 100, code: 'g-003'},
    {name: 'Pepsi', price: 199, description: 'lata 354ml', img: 'https://http2.mlstatic.com/D_NQ_NP_910631-MLA49966614930_052022-O.webp', stock: 100, code: 'g-004'},
    {name: 'Schweppes', price: 240, description: 'lata 354ml', img: 'https://http2.mlstatic.com/D_NQ_NP_941951-MLA45510443367_042021-O.webp', stock: 100, code: 'g-005'},
    {name: 'Schweppes pomelo', price: 240, description: 'lata 354ml', img: 'https://http2.mlstatic.com/D_NQ_NP_663222-MLA46257844475_062021-O.webp', stock: 70, code: 'g-006'},
    {name: 'Paso de los toros', price: 130, description: 'lata 269ml', img: 'https://http2.mlstatic.com/D_NQ_NP_798928-MLA45307495011_032021-O.webp', stock: 130, code: 'g-007'},
    {name: 'Paso de los toros tónica', price: 240, description: 'lata 354ml', img: 'https://http2.mlstatic.com/D_NQ_NP_854533-MLA45510434070_042021-O.webp', stock: 90, code: 'g-008'},    
    {name: 'Heineken', price: 280, description: 'lata 473ml', img: 'https://http2.mlstatic.com/D_NQ_NP_946194-MLA52464610949_112022-O.webp', stock: 200, code: 'c-001'},
    {name: 'Schneider', price: 140, description: 'lata 473ml', img: 'https://http2.mlstatic.com/D_NQ_NP_659074-MLA51811632018_102022-O.webp', stock: 500, code: 'c-002'}
    ]);
	
- Agregar 10 documentos en la coleccion Mensajes 

	db.mensajes.insertMany([
		{email: 'email1@email.com', message: 'Hola1', date: ISODate()},
		{email: 'email2@email.com', message: 'Hola2', date: ISODate()},
		{email: 'email3@email.com', message: 'Hola3', date: ISODate()},
		{email: 'email4@email.com', message: 'Hola4', date: ISODate()},
		{email: 'email5@email.com', message: 'Hola5', date: ISODate()},
		{email: 'email6@email.com', message: 'Hola6', date: ISODate()},
		{email: 'email7@email.com', message: 'Hola7', date: ISODate()},
		{email: 'email8@email.com', message: 'Hola8', date: ISODate()},
		{email: 'email9@email.com', message: 'Hola9', date: ISODate()},
		{email: 'email10@email.com', message: 'Hola10', date: ISODate()}
	]);
	
- Listar todos los documentos en cada colección.

	db.productos.find();
	db.mensajes.find(); 
	
- Mostrar la cantidad de documentos almacenados en cada una de ellas.

	db.products.estimatedDocumentCount()
	db.messages.estimatedDocumentCount()
	
- Agregar un producto más en la colección de productos.

	db.productos.insertOne({name: 'Warsteiner', price: 160, description: 'lata 473ml', img: 'https://http2.mlstatic.com/D_NQ_NP_723495-MLA46569073047_062021-O.webp'});
	
- Realizar una consulta por nombre de producto específico

	db.productos.find({name: 'Sprite'});
	
- Listar los productos con precio menor a 1000 pesos.

	db.productos.find({price: {$lt: 1000}});
	
- Listar los productos con precio entre los 1000 a 3000 pesos.

	db.productos.find({$and: [{price: {$gte: 1000}},{price: {$lte: 3000}}]});
	
- Listar los productos con precio mayor a 3000 pesos.

	db.productos.find({price: {$gte: 3000}});
	
- Realizar una consulta que traiga sólo el nombre del tercer producto más barato.

	db.productos.find().sort({price: 1}).limit(1).skip(2);
	
- Hacer una actualización sobre todos los productos, agregando el campo stock a todos ellos con un valor de 100.

	db.productos.updateMany({}, {$set: {stock: 100}}, {upsert: true});
	
- Cambiar el stock a cero de los productos con precios mayores a 4000 pesos. 

	db.productos.updateMany({price: {$gt: 4000}}, {$set: {stock: 0}});
	
- Borrar los productos con precio menor a 1000 pesos 

	db.productos.deleteMany({price: {$lt: 1000}});
	
- Crear un usuario 'pepe' clave: 'asd456' que sólo pueda leer la base de datos ecommerce. Verificar que pepe no pueda cambiar la información.

	db.createUser({user: 'pepe', pwd: 'asd456', roles: [{role: 'read', db: 'ecommerce'}]});


se usó studio3t

user: root
pwd: 123456
base: mongo-docker